
/ it overwrites window.mixpanel object and collects all event in mixpanel.history
/ If you are building a test that needs to check if tracking is setup correctly in before :each set ENV['mock_mixpanel'] = "true"
- if Rails.env.test? and ENV['mock_mixpanel'] == "true"
  - p "MOCKING MIXPANEL OBJECT.\n In Integration tests all events will be saved in mixpanel.history property. \n If you need to track an event such as link click that navigates to another page, first execute window.mixpanel.preventNavigation(true) which will block navigation by showing YOU WANT TO LEAVE? alert. To remove it in your tests call page.driver.browser.switch_to.alert.dismiss"
  = javascript_include_tag 'mixingpanel/mixpanel_mock'

-else
  :javascript
    (function(c,a){window.mixpanel=a;var b,d,h,e;b=c.createElement("script");
        b.type="text/javascript";b.async=!0;b.src=("https:"===c.location.protocol?"https:":"http:")+
        '//cdn.mxpnl.com/libs/mixpanel-2.2.min.js';d=c.getElementsByTagName("script")[0];
        d.parentNode.insertBefore(b,d);a._i=[];a.init=function(b,c,f){function d(a,b){
        var c=b.split(".");2==c.length&&(a=a[c[0]],b=c[1]);a[b]=function(){a.push([b].concat(
        Array.prototype.slice.call(arguments,0)))}}var g=a;"undefined"!==typeof f?g=a[f]=[]:
        f="mixpanel";g.people=g.people||[];h=['disable','track','track_pageview','track_links',
        'track_forms','register','register_once','unregister','identify','alias','name_tag','set_config',
        'people.set','people.set_once','people.increment','people.track_charge','people.append'];
        for(e=0;e<h.length;e++)d(g,h[e]);a._i.push([b,c,f])};a.__SV=1.2;})(document,window.mixpanel||[]);
    mixpanel.init("#{ENV['MIXPANEL_SECRET_TOKEN']}", #{Mixingpanel.configuration.to_json});

  -# Setup Verbose and Debug mode in Development environment
  - if not Rails.env.production?
    :javascript
      mixpanel.set_config({
        verbose: true,
        debug: true
      });

